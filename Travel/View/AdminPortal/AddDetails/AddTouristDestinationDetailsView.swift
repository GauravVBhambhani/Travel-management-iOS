//
//  AddTouristDestinationDetailsView.swift
//  Travel
//
//  Created by Gaurav Bhambhani on 11/16/24.
//

import SwiftUI

struct AddTouristDestinationDetailsView: View {
    @Environment(\.dismiss) var dismiss
    @ObservedObject var viewModel: TouristDestinationViewModel
    @ObservedObject var agencyViewModel: TravelAgencyViewModel

    @State private var selectedAgencyId: Int?
    @State private var name: String = ""
    @State private var location: String = ""
    @State private var popularAttractions: String = ""
    @State private var rating: String = ""
    @State private var description: String = ""

    @State private var showingAlert = false
    @State private var alertMessage = ""

    var body: some View {
        NavigationView {
            Form {
                Section(header: Text("Agency Information")) {
                    Picker("Select Agency", selection: $selectedAgencyId) {
                        Text("None").tag(Int?.none)
                        ForEach(agencyViewModel.travelAgencies) { agency in
                            Text(agency.name).tag(agency.agency_id as Int?)
                        }
                    }
                }

                Section(header: Text("Destination Details")) {
                    TextField("Name", text: $name)
                    TextField("Location", text: $location)
                    TextField("Popular Attractions", text: $popularAttractions)
                    TextField("Rating (1-5)", text: $rating)
                        .keyboardType(.numberPad)
                    TextField("Description", text: $description)
                }
            }
            .navigationTitle("Add Destination")
            .toolbar {
                ToolbarItem(placement: .confirmationAction) {
                    Button("Save") {
                        saveDestination()
                    }
                }
                ToolbarItem(placement: .cancellationAction) {
                    Button("Cancel") {
                        dismiss()
                    }
                }
            }
            .onAppear {
                agencyViewModel.fetchTravelAgencies()
            }
            .alert(isPresented: $showingAlert) {
                Alert(
                    title: Text("Invalid Input"),
                    message: Text(alertMessage),
                    dismissButton: .default(Text("OK"))
                )
            }
        }
    }

    private func saveDestination() {
        guard let selectedAgencyId = selectedAgencyId else {
            alertMessage = "Please select an agency."
            showingAlert = true
            return
        }

        guard let ratingInt = Int(rating), ratingInt >= 1, ratingInt <= 5 else {
            alertMessage = "Please enter a valid rating between 1 and 5."
            showingAlert = true
            return
        }

        guard !name.isEmpty && !location.isEmpty && !popularAttractions.isEmpty && !description.isEmpty else {
            alertMessage = "All fields must be filled out."
            showingAlert = true
            return
        }

        let newDestination = TouristDestination(
            destination_id: 0, // Assuming ID is auto-generated by the database
            agency_id: selectedAgencyId,
            name: name,
            location: location,
            popular_attractions: popularAttractions,
            rating: ratingInt,
            description: description
        )

        viewModel.addDestination(newDestination)
        dismiss()
    }
}

#Preview {
    AddTouristDestinationDetailsView(
        viewModel: TouristDestinationViewModel(),
        agencyViewModel: TravelAgencyViewModel()
    )
}
