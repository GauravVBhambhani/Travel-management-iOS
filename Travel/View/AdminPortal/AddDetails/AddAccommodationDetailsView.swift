//
//  AddAccommodationDetailsView.swift
//  Travel
//
//  Created by Gaurav Bhambhani on 11/16/24.
//

import SwiftUI

struct AddAccommodationDetailsView: View {
    
    @Environment(\.dismiss) var dismiss
    @ObservedObject var accommodationViewModel: AccommodationViewModel
    @ObservedObject var destinationViewModel = TouristDestinationViewModel()
    
    @State private var selectedDestinationId: Int? = nil
    @State private var name = ""
    @State private var street = ""
    @State private var city = ""
    @State private var state = ""
    @State private var zipcode = ""
    @State private var type = ""
    @State private var price_per_night = ""
    @State private var availability_status = ""
    @State private var rating = ""
    
    @State private var showingAlert = false
    @State private var alertMessage = ""
    
    var body: some View {
        NavigationView {
            Form {
                Section(header: Text("Select Destination")) {
                    Picker("Destination", selection: $selectedDestinationId) {
                        Text("Select a Destination").tag(nil as Int?)
                        ForEach(destinationViewModel.destinations) { destination in
                            Text(destination.name).tag(destination.destination_id as Int?)
                        }
                    }
                }
                
                Section(header: Text("Accommodation Details")) {
                    TextField("Name", text: $name)
                    TextField("Street", text: $street)
                    TextField("City", text: $city)
                    TextField("State", text: $state)
                    TextField("Zipcode", text: $zipcode)
                        .keyboardType(.numberPad)
                    TextField("Type", text: $type)
                    TextField("Price per Night", text: $price_per_night)
                        .keyboardType(.decimalPad)
                    TextField("Availability Status (Available/Booked)", text: $availability_status)
                    TextField("Rating (1-5)", text: $rating)
                        .keyboardType(.numberPad)
                }
            }
            .navigationTitle("Add Accommodation")
            .toolbar {
                ToolbarItem(placement: .confirmationAction) {
                    Button("Save") {
                        saveAccommodation()
                    }
                }
                ToolbarItem(placement: .cancellationAction) {
                    Button("Cancel") {
                        dismiss()
                    }
                }
            }
            .alert(isPresented: $showingAlert) {
                Alert(
                    title: Text("Invalid Input"),
                    message: Text(alertMessage),
                    dismissButton: .default(Text("OK"))
                )
            }
            .onAppear {
                destinationViewModel.fetchDestinations()
            }
        }
    }
    
    private func saveAccommodation() {
        guard let destinationId = selectedDestinationId else {
            alertMessage = "Please select a destination."
            showingAlert = true
            return
        }
        
        guard !name.isEmpty else {
            alertMessage = "Name is required."
            showingAlert = true
            return
        }
        
        guard let zipcodeValue = Int(zipcode), zipcodeValue > 99999, zipcodeValue <= 999999 else {
            alertMessage = "Please enter a valid 6-digit zipcode."
            showingAlert = true
            return
        }
        
        guard !type.isEmpty else {
            alertMessage = "Type is required."
            showingAlert = true
            return
        }
        
        guard let pricePerNight = Float(price_per_night), pricePerNight >= 0 else {
            alertMessage = "Price per night must be a positive number."
            showingAlert = true
            return
        }
        
        guard availability_status == "Available" || availability_status == "Booked" else {
            alertMessage = "Availability status must be either 'Available' or 'Booked'."
            showingAlert = true
            return
        }
        
        guard let ratingValue = Int(rating), ratingValue >= 1, ratingValue <= 5 else {
            alertMessage = "Rating must be between 1 and 5."
            showingAlert = true
            return
        }
        
        let newAccommodation = Accommodation(
            accommodation_id: 0, // Assuming ID is auto-generated by the database
            destination_id: destinationId,
            name: name,
            street: street,
            city: city,
            state: state,
            zipcode: zipcodeValue,
            type: type,
            price_per_night: pricePerNight,
            availability_status: availability_status,
            rating: ratingValue
        )
        
        accommodationViewModel.addAccommodation(newAccommodation)
        dismiss()
    }
}

#Preview {
    AddAccommodationDetailsView(accommodationViewModel: AccommodationViewModel())
}
