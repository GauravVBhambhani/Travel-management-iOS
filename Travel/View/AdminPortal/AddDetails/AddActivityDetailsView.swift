//
//  AddActivityDetailsView.swift
//  Travel
//
//  Created by Gaurav Bhambhani on 11/16/24.
//

import SwiftUI

struct AddActivityDetailsView: View {
    
    @Environment(\.dismiss) var dismiss
    
    @ObservedObject var activityViewModel: ActivityViewModel
    @ObservedObject var touristDestinationViewModel: TouristDestinationViewModel
    
    @State private var selectedDestination: TouristDestination? = nil
    @State private var name = ""
    @State private var description = ""
    @State private var location = ""
    @State private var duration = ""
    @State private var price = ""
    
    @State private var showingAlert = false
    @State private var alertMessage = ""
    
    var body: some View {
        NavigationView {
            Form {
                Section(header: Text("Activity Details")) {
                    Picker("Destination", selection: $selectedDestination) {
                        Text("Select a Destination").tag(TouristDestination?.none)
                        ForEach(touristDestinationViewModel.destinations, id: \.self) { destination in
                            Text(destination.name).tag(destination as TouristDestination?)
                        }
                    }
                    TextField("Name", text: $name)
                    TextField("Description", text: $description)
                    TextField("Location", text: $location)
                    TextField("Duration (in hours)", text: $duration)
                        .keyboardType(.numberPad)
                    TextField("Price", text: $price)
                        .keyboardType(.decimalPad)
                }
            }
            .navigationTitle("Add Activity")
            .toolbar {
                ToolbarItem(placement: .confirmationAction) {
                    Button("Save") {
                        saveActivity()
                    }
                }
                ToolbarItem(placement: .cancellationAction) {
                    Button("Cancel") {
                        dismiss()
                    }
                }
            }
            .alert(isPresented: $showingAlert) {
                Alert(
                    title: Text("Invalid Input"),
                    message: Text(alertMessage),
                    dismissButton: .default(Text("OK"))
                )
            }
        }
    }
    
    private func saveActivity() {
        guard let selectedDestination = selectedDestination else {
            alertMessage = "Please select a destination."
            showingAlert = true
            return
        }
        
        guard !name.isEmpty else {
            alertMessage = "Activity name is required."
            showingAlert = true
            return
        }
        
        guard let durationInt = Int(duration), durationInt > 0 else {
            alertMessage = "Duration must be a positive integer."
            showingAlert = true
            return
        }
        
        guard let priceFloat = Float(price), priceFloat >= 0 else {
            alertMessage = "Price must be a positive number."
            showingAlert = true
            return
        }
        
        let newActivity = Activity(
            activity_id: 0, // Assuming ID is auto-generated by the database
            destination_id: selectedDestination.id,
            name: name,
            description: description,
            location: location,
            duration: "\(durationInt) hours",
            price: String(priceFloat)
        )
        
        activityViewModel.addActivity(newActivity)
        dismiss()
    }
}

#Preview {
    AddActivityDetailsView(
        activityViewModel: ActivityViewModel(),
        touristDestinationViewModel: TouristDestinationViewModel()
    )
}
