//
//  AddAssetDetailsView.swift
//  Travel
//
//  Created by Gaurav Bhambhani on 11/16/24.
//

import SwiftUI

struct AddAssetDetailsView: View {
    
    @Environment(\.dismiss) var dismiss
    @ObservedObject var assetViewModel: AssetViewModel
    
    @State private var type = ""
    @State private var companyName = ""
    @State private var description = ""
    @State private var value = ""
    
    @State private var showingAlert = false
    @State private var alertMessage = ""
    
    var body: some View {
        NavigationView {
            Form {
                Section(header: Text("Asset Details")) {
                    TextField("Type", text: $type)
                    TextField("Company Name (optional)", text: $companyName)
                    TextField("Description (optional)", text: $description)
                    TextField("Value", text: $value)
                        .keyboardType(.decimalPad)
                }
            }
            .navigationTitle("Add Asset")
            .toolbar {
                ToolbarItem(placement: .confirmationAction) {
                    Button("Save") {
                        saveAsset()
                    }
                }
                ToolbarItem(placement: .cancellationAction) {
                    Button("Cancel") {
                        dismiss()
                    }
                }
            }
            .alert(isPresented: $showingAlert) {
                Alert(
                    title: Text("Invalid Input"),
                    message: Text(alertMessage),
                    dismissButton: .default(Text("OK"))
                )
            }
        }
    }
    
    private func saveAsset() {
        guard !type.isEmpty else {
            alertMessage = "Asset type is required."
            showingAlert = true
            return
        }
        
        guard let valueFloat = Float(value), valueFloat >= 0 else {
            alertMessage = "Value must be a positive number."
            showingAlert = true
            return
        }
        
        let newAsset = Asset(
            asset_id: 0, // Assuming ID is auto-generated by the database
            type: type,
            companyName: companyName.isEmpty ? nil : companyName,
            description: description.isEmpty ? nil : description,
            value: valueFloat
        )
        
        assetViewModel.addAsset(newAsset)
        dismiss()
    }
}

#Preview {
    AddAssetDetailsView(assetViewModel: AssetViewModel())
}
